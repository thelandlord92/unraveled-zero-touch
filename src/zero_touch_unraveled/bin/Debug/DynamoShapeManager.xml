<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamoShapeManager</name>
    </assembly>
    <members>
        <member name="T:DynamoShapeManager.Preloader">
            <summary>
            Shape manager preloader class that helps with preloading Autodesk Shape 
            Manager (ASM) binaries through geometry library (LibG). This class being
            part of Dynamo core module, relies on IGeometryConfiguration supplied by
            the host application to determine the installed location of ASM binaries.
            </summary>
            
        </member>
        <member name="F:DynamoShapeManager.Preloader.preloadedShapeManagerPath">
            <summary>
            This static data member represents the location of the shape manager
            that has been successfully preloaded. It is made static to ensure no 
            more than one ASM gets preloaded in the same address space.
            </summary>
        </member>
        <member name="M:DynamoShapeManager.Preloader.#ctor(System.String)">
            <summary>
            Constructs a preloader object to help preload shape manager.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_xxx folder, where 'xxx' represents the library version. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory.
            </param>
        </member>
        <member name="M:DynamoShapeManager.Preloader.#ctor(System.String,System.Collections.Generic.IEnumerable{DynamoShapeManager.LibraryVersion})">
            <summary>
            Constructs a preloader object to help preload a specific version of 
            shape manager.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_xxx folder, where 'xxx' represents the library version. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory.
            </param>
            <param name="versions">A list of version numbers to check for in order 
            of preference. This argument cannot be null or empty.</param>
        </member>
        <member name="M:DynamoShapeManager.Preloader.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Version})">
            <summary>
            Constructs a preloader object to help preload a specific version of 
            shape manager.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_major_minor_build folder. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory.
            </param>
            <param name="versions">A list of version numbers to check for in order 
            of preference. This argument cannot be null or empty.</param>
        </member>
        <member name="M:DynamoShapeManager.Preloader.#ctor(System.String,System.String,DynamoShapeManager.LibraryVersion)">
            <summary>
            Constructs a preloader object to help preload the specified version 
            of shape manager from the given directory.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_xxx folder, where 'xxx' represents the library version. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory.
            </param>
            <param name="shapeManagerPath">The directory from where shape manager
            binaries can be preloaded from.</param>
            <param name="version">The version of shape manager.</param>
            
        </member>
        <member name="M:DynamoShapeManager.Preloader.#ctor(System.String,DynamoShapeManager.LibraryVersion)">
            <summary>
            Construct a Preloader by specifying a required library version.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_xxx folder, where 'xxx' represents the library version. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory.
            </param>
            <param name="version">The version of shape manager.</param>
            <returns></returns>
        </member>
        <member name="M:DynamoShapeManager.Preloader.Preload">
            <summary>
            Attempts to load the geometry library binaries using the version and location
            specified when the Preloader was constructed.
            </summary>
        </member>
        <member name="P:DynamoShapeManager.Utilities.ProductsWithASM">
            <summary>
            Key words for Products containing ASM binaries
            </summary>
        </member>
        <member name="F:DynamoShapeManager.Utilities.PreloaderMethodName">
            <summary>
            This method is defined in libG.AsmPreloader for actual ASM preload
            </summary>
        </member>
        <member name="F:DynamoShapeManager.Utilities.ASMFileMask">
            <summary>
            The mask to filter ASM binary
            </summary>
        </member>
        <member name="M:DynamoShapeManager.Utilities.GetInstalledAsmVersion(System.Collections.Generic.List{DynamoShapeManager.LibraryVersion},System.String@,System.String)">
            <summary>
            Call this method to determine the version of ASM that is installed 
            on the user machine. The method scans through a list of known Autodesk 
            product folders for ASM binaries with the targeted version.
            </summary>
            <param name="versions">A list of version numbers to check for in order 
            of preference. This argument cannot be null or empty.</param>
            <param name="location">The full path of the directory in which targeted
            ASM binaries are found. This argument cannot be null.</param>
            <param name="rootFolder">This method makes use of DynamoInstallDetective
            to determine the installation location of various Autodesk products. This 
            argument is not optional and must represent the full path to the folder 
            which contains DynamoInstallDetective.dll. An exception is thrown if the 
            assembly cannot be located.</param>
            <returns>Returns LibraryVersion of ASM if any installed ASM is found, 
            or None otherwise.</returns>
            
        </member>
        <member name="M:DynamoShapeManager.Utilities.GetInstalledAsmVersion2(System.Collections.Generic.IEnumerable{System.Version},System.String@,System.String,System.Func{System.String,System.Collections.IEnumerable})">
            <summary>
            Call this method to determine the version of ASM that is installed 
            on the user machine. The method scans through a list of known Autodesk 
            product folders for ASM binaries with the targeted version.
            </summary>
            <param name="versions">A IEnumerable of version numbers to check for in order 
            of preference. This argument cannot be null or empty.</param>
            <param name="location">The full path of the directory in which targeted
            ASM binaries are found. This argument cannot be null.</param>
            <param name="rootFolder">This method makes use of DynamoInstallDetective
            to determine the installation location of various Autodesk products. This 
            argument is not optional and must represent the full path to the folder 
            which contains DynamoInstallDetective.dll. An exception is thrown if the 
            assembly cannot be located.</param>
            <param name="getASMInstallsFunc"> A delegate which can be used to replace the default ASM install
            lookup method. This is primarily used for testing. The delegate should return an IEnumerable
            of Tuples - these represent versions of ASM which are located on the user's machine.</param>
            <returns>Returns System.Version of ASM if any installed ASM is found, 
            or null otherwise.</returns>
        </member>
        <member name="M:DynamoShapeManager.Utilities.GetLibGPreloaderLocation(System.Version,System.String)">
            <summary>
            Get the corresponding libG preloader location for the target ASM loading version.
            If there is exact match preloader version to the target ASM version, use it, 
            otherwise use the closest below.
            </summary>
            <param name="version">The target loading version of ASM.</param>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_major_minor_build folder. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory.</param>
            <returns></returns>
        </member>
        <member name="M:DynamoShapeManager.Utilities.PreloadAsmFromPath(System.String,System.String)">
            <summary>
            Call this method to preload ASM binaries from a specific location. This 
            method does not have a return value, any failures in loading ASM binaries
            will result in an exception being thrown.
            </summary>
            <param name="preloaderLocation">Full path of the folder that contains  
            PreloaderAssembly assembly. This argument must represent a valid path 
            to the loader.</param>
            <param name="asmLocation">Full path of the folder that contains ASM 
            binaries to load. This argument cannot be null or empty.</param>
            
        </member>
        <member name="M:DynamoShapeManager.Utilities.RemapOldLibGPathToNewVersionPath(System.String)">
            <summary>
            Attempts to remap a an old LibG path to a new one using a version map.
            We assume that the leaf directory is of the form LibG_[Version].
            </summary>
            <param name="preloaderLocation"></param>
            <returns> new version LibG path or Empty string if the path could not be remapped.</returns>
        </member>
        <member name="M:DynamoShapeManager.Utilities.GetGeometryFactoryPath(System.String,DynamoShapeManager.LibraryVersion)">
            <summary>
            This method will return the path to the GeometryFactory assembly location 
            for a requested version of the geometry library.
            This method is tolerant to the requested version in that it will attempt to 
            locate an exact or lower version of the GeometryFactory assembly.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_xxx_y_z folder, where 'xxx y z' represents the library version of asm. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory - it cannot be null.</param>
            <param name="version">Version number of the targeted geometry library.
            If the resulting assembly does not exist, this method will look for a lower version match.
            This parameter cannot be null. </param>
            <returns>The full path to GeometryFactoryAssembly assembly.</returns>
            
        </member>
        <member name="M:DynamoShapeManager.Utilities.GetGeometryFactoryPath2(System.String,System.Version)">
            <summary>
            This method will return the path to the GeometryFactory assembly location 
            for a requested version of the geometry library.
            This method is tolerant to the requested version in that it will attempt to 
            locate an exact or lower version of the GeometryFactory assembly.
            </summary>
            <param name="rootFolder">Full path of the directory that contains 
            LibG_xxx_y_z folder, where 'xxx y z' represents the library version of asm. In a 
            typical setup this would be the same directory that contains Dynamo 
            core modules. This must represent a valid directory - it cannot be null.</param>
            <param name="version">Version number of the targeted geometry library.
            If the resulting assembly does not exist, this method will look for a lower version match.
            This parameter cannot be null. </param>
            <returns>The full path to GeometryFactoryAssembly assembly.</returns>
            
        </member>
        <member name="M:DynamoShapeManager.Utilities.IsASMInstallationComplete(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Given ASM installation files and its version, checks if all of the required files are present.
            Note: This method is internal in order to testable.
            </summary>
            <param name="filePaths">Files found on an ASM installation location.</param>
            <param name="majorVersion">Major version of ASM found in the specified location.</param>
            <returns>Whether the files represent a complete ASM installation or not.</returns>
        </member>
        <member name="M:DynamoShapeManager.Utilities.GetVersionFromPath(System.String,System.String)">
            <summary>
            Extracts version of ASM dlls from a path by scanning for ASM dlls in the path.
            Throws if ASM binaries cannot be found in the path.
            </summary>
            <param name="asmPath">path to directory containing asm dlls</param>
            <returns></returns>
            <param name="searchPattern">optional - to be used for testing - default is the ASM search pattern.</param>
            <returns></returns>
        </member>
    </members>
</doc>
