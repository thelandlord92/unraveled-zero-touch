<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamoApplications</name>
    </assembly>
    <members>
        <member name="E:Dynamo.Applications.StartupUtils.ASMPreloadFailure">
            <summary>
            Raised when loading of the ASM binaries fails. A failure message is passed as a parameter.
            </summary>
        </member>
        <member name="T:Dynamo.Applications.StartupUtils.CLILookUp">
             <summary>
            this class is left unimplemented,unclear how to
            lookup installation locations on nix/mac
             </summary>
        </member>
        <member name="P:Dynamo.Applications.StartupUtils.CommandLineArguments.ServiceMode">
            <summary>
            Boolean indication of launching Dynamo in service mode, this mode is optimized for minimal launch time
            </summary>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.PreloadShapeManager(System.String@,System.String@)">
            <summary>
            Attempts to load the geometry library binaries using the location params.
            </summary>
            <param name="geometryFactoryPath">libG ProtoInterface path</param>
            <param name="preloaderLocation">libG folder path</param>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.InitializeUpdateManager">
             <summary>
            if we are building a model for CLI mode, then we don't want to start an updateManager
            for now, building an updatemanager instance requires finding Dynamo install location
            which if we are running on mac os or *nix will use different logic then SandboxLookup 
             </summary>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.MakeCLIModel(System.String,System.String,System.String,Dynamo.Models.HostAnalyticsInfo)">
            <summary>
            Use this overload to construct a DynamoModel in CLI context when the location of ASM to use is known, host analytics info is known and you want to set data paths.
            </summary>
            <param name="asmPath">Path to directory containing geometry library binaries</param>
            <param name="userDataFolder">Path to be used by PathResolver for UserDataFolder</param>
            <param name="commonDataFolder">Path to be used by PathResolver for CommonDataFolder</param>
            <param name="info">Host analytics info specifying Dynamo launching host related information.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.MakeCLIModel(System.String,System.String,System.String,Dynamo.Models.HostAnalyticsInfo,System.Boolean)">
            <summary>
            Use this overload to construct a DynamoModel in CLI context when the location of ASM to use is known, host analytics info is known and you want to set data paths.
            </summary>
            <param name="asmPath">Path to directory containing geometry library binaries</param>
            <param name="userDataFolder">Path to be used by PathResolver for UserDataFolder</param>
            <param name="commonDataFolder">Path to be used by PathResolver for CommonDataFolder</param>
            <param name="info">Host analytics info specifying Dynamo launching host related information.</param>
            <param name="isServiceMode">Boolean indication of launching Dynamo in service mode, this mode is optimized for minimal launch time.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.MakeModel(System.Boolean,System.String,System.String)">
            <summary>
            Use this overload to construct a DynamoModel when the location of ASM to use is known and host name is known.
            </summary>
            <param name="CLImode">CLI mode starts the model in test mode and uses a separate path resolver.</param>
            <param name="asmPath">Path to directory containing geometry library binaries</param>
            <param name="hostName">Dynamo variation identified by host.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.MakeModel(System.Boolean,System.String,Dynamo.Models.HostAnalyticsInfo)">
            <summary>
            Use this overload to construct a DynamoModel when the location of ASM to use is known and host analytics info is known.
            </summary>
            <param name="CLImode">CLI mode starts the model in test mode and uses a separate path resolver.</param>
            <param name="asmPath">Path to directory containing geometry library binaries</param>
            <param name="info">Host analytics info specifying Dynamo launching host related information.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.CreatePathResolver(System.Boolean,System.String,System.String,System.String)">
            <summary>
            It returns an IPathResolver based on the mode and some locations
            </summary>
            <param name="CLImode">CLI mode starts the model in test mode and uses a seperate path resolver.</param>
            <param name="preloaderLocation">Path to be used by PathResolver for preLoaderLocation</param>
            <param name="userDataFolder">Path to be used by PathResolver for UserDataFolder</param>
            <param name="commonDataFolder">Path to be used by PathResolver for CommonDataFolder</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.MakeModel(System.Boolean,System.String)">
            <summary>
            TODO (DYN-2118) remove this method in 3.0 and unify this method with the overload above.
            Use this overload to construct a DynamoModel when the location of ASM to use is known.
            </summary>
            <param name="CLImode">CLI mode starts the model in test mode and uses a seperate path resolver.</param>
            <param name="asmPath">Path to directory containing geometry library binaries</param>
            <returns></returns>
        </member>
        <member name="F:Dynamo.Applications.StartupUtils.assemblyNamesToIgnore">
            <summary>
            The white list of dependencies to be ignored.
            </summary>
        </member>
        <member name="M:Dynamo.Applications.StartupUtils.CheckAssemblyForVersionMismatches(System.Reflection.Assembly)">
            <summary>
            Checks that an assembly does not have any dependencies that have already been loaded into the 
            appDomain with an incompatible to the one Dynamo requires.
            </summary>
            <param name="assembly"></param>
            <returns>returns a list of fileLoad exceptions - if the list is empty no mismatched assemblies were encountered </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dynamo.Applications.StartupUtils.GetVersionMismatchedReferencesInAppDomain(System.Reflection.Assembly,System.String[])" -->
        <member name="T:DynamoApplications.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.MismatchedAssemblyList">
            <summary>
              Looks up a localized string similar to It is likely one of the following assemblies loaded the incompatible version:.
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.MismatchedAssemblyVersion">
            <summary>
              Looks up a localized string similar to While loading assembly {0}, Dynamo detected that the dependency {1} was already loaded with an incompatible version. It is likely that another Revit Addin has loaded this assembly, please try uninstalling other Addins, and starting Dynamo again. Dynamo may be unstable in this state..
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.MismatchedAssemblyVersionShortMessage">
            <summary>
              Looks up a localized string similar to Dynamo has detected a conflict with a dependency and may be unstable. If any issues are detected, please uninstall addins or packages and contact the provider..
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.MismatchedAssemblyVersionTitle">
            <summary>
              Looks up a localized string similar to Error Loading A Dependency.
            </summary>
        </member>
        <member name="P:DynamoApplications.Properties.Resources.SplashScreenPreLoadingAsm">
            <summary>
              Looks up a localized string similar to Preloading Geometry library.
            </summary>
        </member>
    </members>
</doc>
